---
title: "Resumen gr치fico de datos en R"
author: "Fernando Salcedo Mej칤a, ALZAK Foundation"
date: 2023-08-19
format: 
  revealjs :
    logo: "src/alzak_foundation.png"
    footer: "Copyright (c) 2023, Fernando Salcedo"
    scrollable: true
    margin: 0
execute:
  echo: true
enbeded: true
---

```{r setup, include=FALSE}
knitr::knit_hooks$set(crop = knitr::hook_pdfcrop)
```

## Introducci칩n 游봏

- Los gr치ficos permiten resumir datos de forma visual.
- Su objetivo siempre es representar patrones o comportamientos.

![Mapa de Charles Minard (1869) que muestra el movimiento, las p칠rdidas humanas y la temperatura ambiental durante la campa침a de Napole칩n contra Rusia en 1812.](https://upload.wikimedia.org/wikipedia/commons/2/29/Minard.png)

## Paquetes usados para gr치ficar en `R`

- Durante el material usaremos comandos de `r-base` para gr치fica r치pidamente.
- Por otra parte, `ggplot2` es el paquete de `R` m치s usado para hacer gr치ficos 

# Cargar datos

- Usaremos una base de dispensaci칩n de medicamentos.

```{r}
# Cargamos los datos de ejemplo
library(tidyverse)
df_med <- read_csv2("../datos/base_medicamentos.csv")

# Limpiar nombres
df_med <- janitor::clean_names(df_med)

# encabezado
glimpse(df_med)

```

## Gr치ficos exploratorios con `R-base` {background-color="#b2d8d8"}

## Histograma

- Los histogramas muestran la distribuci칩n de una variable continua dividiendo sus valores en rangos y representando la frecuencia de valores que est치n en esos rangos.

```{r}
# r-base
hist(df_med$precio, 
     xlab = "Precio medicamentos", 
     ylab = "Frecuencia", 
     main = "Histrograma precio")

```

### Densidad

- Un gr치fico de densidad t칠cnicamente es la estimaci칩n de la funci칩n de densidad de probabilidad de una variable aleatoria. 
- Los diagramas de densidad pueden ser una forma efectiva de ver la distribuci칩n de una variable continua. 

```{r}
# r-base
# Densidad de una variable continua 
plot(density(df_med$precio), #vector o variable
     xlab = "Precio medicamentos", 
     ylab = "Frecuencia", 
     main = "Histrograma precios")

```


### Caja y bigotes

- Describe una variable continua en cinco estad칤sticos de resumen : m칤nimo, primer cuartil (25%), mediana (50%), tercer cuartil (75%) y m치ximo
- Tambi칠n permite identificar valore extremos

```{r}
# una variable
boxplot(df_med$costo_total)

# una variable sin datos atipicos
boxplot(df_med$costo_total, outline = FALSE)

# dos o m치s variables categ칩ricas o factor
boxplot(costo_total ~ pbs, data = df_med, outline = FALSE)


```
### Gr치ficos de barras

- Gr치ficos de barras (simples y apiladas)
- Las gr치ficas de barras representan un volumen o cantidad de un atributo. 
- Por ejemplo, n칰mero de dispensaciones realizadas o promedio del costo de un medicamento por mes.
- Son el tipo de gr치fico m치s usados.

```{r}
# simple
barplot(table(df_med$pbs), 
        xlab = "PBS",
        ylab = "Frecuencia", 
        main = "Dispensaciones por plan de beneficios")

# mas de un grupo no apilado
tab <- table(df_med$tipo_entrega, df_med$pbs)
barplot(tab, 
        beside = TRUE,
        legend.text = rownames(tab),
        args.legend = list(x = "topleft"),
        xlab = "PBS",
        ylab = "Frecuencia", 
        main = "Dispensaciones por plan de beneficios")

# mas de un grupo apilado
barplot(tab,
        legend.text = rownames(tab),
        args.legend = list(x = "topleft"),
        xlab = "PBS",
        ylab = "Frecuencia", 
        main = "Dispensaciones por plan de beneficios")

# mas de un grupo apilado 100%
barplot(prop.table(tab, 2)*100,
        legend.text = rownames(tab),
        args.legend = list(x = "topleft"),
        xlab = "PBS",
        ylab = "Frecuencia", 
        main = "Dispensaciones por plan de beneficios")

```

## Gr치ficos con `ggplot2` {background-color="#b2d8d8"}

## Principio de `ggplot2`

- La filosof칤a de `ggplot2` es una agregaci칩n de capas de caracter칤sticas para crear el gr치fico

![](src/ggplot_concepto.png){width=50%}

## Esquema de c칩mo funciona `ggplot()`

![Kieran Healy. Data Visualization A practical introduction. 
](src/ch-03-ggplot-flow-vertical.png){width=50%}

## Gr치fico de barras `geom_col()` y `geom_bar()`

- Lo usamos para representar vol칰menes o cantidad
- Realicemos un gr치fico con `geom_bar()` siguiendo el esquema paso a paso de c칩mo funciona `ggplot()`, 

## 1. Tidy data

```{r}
# Dar formato a las fechas
df_med <- df_med %>% 
  mutate(
    fecha_entrega = dmy(fecha_entrega)
  )

# encabezado
glimpse(df_med)
```

## 2. Mapping

```{r}
library(ggplot2)

p <- ggplot(data = df_med, mapping = aes(x = pbs))

p
```

## 3. Geom

```{r}
p <- p + geom_bar()
p
```

## 4. Labels & Guides

```{r}
p <- p + labs(x = "PBS",
       y = "Frecuencia",
       title = "Dispensaciones por plan de beneficios") + 
  theme_bw()
p
```

## Uniendo todos los pasos

```{r}
#| output-location: column
#| echo: true
#| crop: true
p <- p + geom_bar() +
  coord_cartesian() +
  labs(x = "PBS",
       y = "Frecuencia",
       title = "Dispensaciones por plan de beneficios") +
  theme_bw()
p
```


```{css, echo=FALSE}
.reveal .map img {
  height: 80vh;
  width: auto !important;
  padding-left: 2em;
}
```

## Agregar colores y etiquetas en `geom_bar()`

```{r}
#| output-location: column
#| echo: true
#| crop: true

# Agregar colores y etiquetas 
ggplot(data = df_med, mapping = aes(x = pbs)) +
  # Agregar colores
  geom_bar() +
  # Agregar etiquetas 
  geom_text(aes(label = ..count..), stat = "count", vjust = 0)  +
  scale_fill_manual(values = c("tomato", "skyblue")) +
  labs(x = "PBS",
         y = "Frecuencia",
         title = "Dispensaciones por plan de beneficios") +
  theme_bw()
  

```

## Usando `fill` para agregar grupos en `geom_bar()`

```{r}
#| output-location: column
#| echo: true
#| crop: true

# mas de un grupo no apilado
ggplot(
  data = na.omit(df_med),
  mapping = aes(x = pbs,
                fill = tipo_entrega,
                group = tipo_entrega)
) +
  geom_bar(position = "dodge") +
  geom_text(aes(label = ..count..,  group = tipo_entrega),
            stat = "count",
            position = position_dodge(0.9),
            vjust = 0)  +
  scale_fill_manual(values = c("#54504F", "#5DC3DA")) +
  labs(x = "PBS",
       y = "Frecuencia",
       title = "Dispensaciones por plan de beneficios",
       fill = "Tipo de entrega") +
  theme_bw()

```

## Apilar los grupos dentro de cada barra con `geom_bar()`

```{r}
#| output-location: column
#| echo: true
#| crop: true

# mas de un grupo apilado 
ggplot(data = na.omit(df_med),
       mapping = aes(x = pbs, fill = tipo_entrega)) +
  geom_bar() +
  scale_fill_manual(values = c("#54504F", "#5DC3DA")) +
  labs(x = "PBS",
       y = "Frecuencia",
       title = "Dispensaciones por plan de beneficios",
       fill = "Tipo de entrega") +
  theme_bw()

```

## Apilar los grupos al 100% con `geom_bar()`

```{r}
#| output-location: column
#| echo: true
#| crop: true

# mas de un grupo apilado 100%
ggplot(data = na.omit(df_med), mapping = aes(x = pbs, fill = tipo_entrega)) +
  geom_bar(position = "fill") +
  geom_text(aes(label = scales::percent(..count.. / sum(..count..))), 
            stat = "count", 
            position = position_fill(vjust = 0.5)) +
  scale_fill_manual(values = c("#54504F", "#5DC3DA")) +
  labs(x = "PBS",
       y = "Frecuencia",
       title = "Dispensaciones por plan de beneficios", 
       fill = "Tipo de entrega") + 
  theme_bw()
 
```

## Usando `facets` para estratificar gr치ficos

```{r}
#| output-location: column
#| echo: true
#| crop: true

ggplot(data = na.omit(df_med),
       mapping = aes(x = pbs, fill = tipo_entrega)) +
  geom_bar(position = "fill") +
  geom_text(aes(label = scales::percent(..count.. / sum(..count..))),
            stat = "count",
            position = position_fill(vjust = 0.5)) +
  scale_fill_manual(values = c("#54504F", "#5DC3DA")) +
  labs(x = "PBS",
       y = "Frecuencia",
       title = "Dispensaciones por plan de beneficios",
       fill = "Tipo de entrega") +
  theme_bw() +
  facet_wrap( ~ cronico)

```

## Gr치fico de linea usando `geom_line()` y `geom_point()`

- Un gr치fico de l칤nea se usa para mostrar evoluci칩n o cambio
- Vamos a crear un gr치fico de l칤neas de las dispensaciones por mes

```{r}

# creamos las variables
df_disp <- df_med %>% 
  mutate(
    mes_disp = floor_date(fecha_entrega, "month")
  ) %>% 
  count(mes_disp)

df_disp

```

## Gr치fico de linea usando `geom_line()` y `geom_point()`

```{r}

ggplot(df_disp, aes(x = mes_disp, y = n)) +
  geom_line() +
  geom_point() +
  geom_text(aes(label = n, y = n + 100), vjust = 0, nudge_y = 0.5) +
  scale_x_date(date_breaks = "months", date_labels = "%m/%Y") +
  labs(
    x = "Mes de dispensaci칩n",
    y = "Cantidad"
  ) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90))

```
